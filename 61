DB_
var firebaseConfig = {
  apiKey: "AIzaSyCH3aQ1X0txE25pUgJRlgsbybU4v-A715o",
  authDomain: "wireless-buzzer-fb356.firebaseapp.com",
  databaseURL: "https://wireless-buzzer-fb356-default-rtdb.firebaseio.com",
  projectId: "wireless-buzzer-fb356",
  storageBucket: "wireless-buzzer-fb356.appspot.com",
  messagingSenderId: "905718091383",
  appId: "1:905718091383:web:90e90fb37be6abd5ba4072",
  measurementId: "G-P66FX4F8M9"
};

______________

JSON

{
  "dependencies": {
    "expo-av": "~10.1.3",
    "firebase": "7.6.1",
    "react-navigation": "4.0.10",
    "react-native-paper": "3.1.1",
    "@react-navigation/native": "^3.6.2",
    "@expo/vector-icons": "^12.0.0"
  }
}







_____________

import * as React from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import AppHeader from '../components/AppHeader';
import db from "../config";

export default class HomeScreen extends React.Component {



  goToBuzzerScreen = (buzzercolor) => {
    var teamRef = db.ref('teams/'+ buzzercolor);
 
    this.props.navigation.navigate('BuzzerScreen', { color: buzzercolor });
  };

  componentDidMount(){
    var teamsref  = db.ref("teams");
    teamsref.on("value", data => {
      var teamDetails = data.val();
      this.setState({

      });
    });
  }

  render() {
    return (
      <View>
        <AppHeader />

        <TouchableOpacity
    
          style={[styles.button, { backgroundColor: 'red' }]}
          onPress={() => {
            this.goToBuzzerScreen('red');
          }}>
          <Text style={styles.buttonText}>Team 1</Text>
        </TouchableOpacity>

        <TouchableOpacity

          style={[styles.button, { backgroundColor: 'green' }]}
          onPress={() => {
            this.goToBuzzerScreen('green');
          }}>
          <Text style={styles.buttonText}>Team 2</Text>
        </TouchableOpacity>

        <TouchableOpacity
           disabled= {!this.state.blueStatus}
          style={[styles.button, { backgroundColor: 'blue' }]}
          onPress={() => {
            this.goToBuzzerScreen('blue');
          }}>
          <Text style={styles.buttonText}>Team 3</Text>
        </TouchableOpacity>

        <TouchableOpacity
          disabled= {!this.state.yellowStatus}
          style={[styles.button, { backgroundColor: 'yellow' }]}
          onPress={() => {
            this.goToBuzzerScreen('yellow');
          }}>
          <Text style={styles.buttonText}>Team 4</Text>
        </TouchableOpacity>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  button: {
    justifyContent: 'center',
    alignSelf: 'center',
    borderWidth: 2,
    borderRadius: 15,
    marginTop: 50,
    width: 200,
    height: 50,
  },
  buttonText: {
    textAlign: 'center',
    color: 'white',
  },
});
______________________
Sound
import * as React from 'react';
import { Text, View, TouchableOpacity, StyleSheet } from 'react-native';
import { Audio } from 'expo-av';
import firebase from "firebase";

import db from '../config';

class SoundButton extends React.Component {
  playSound = async () => {
    await Audio.Sound.createAsync(
      { uri: 'http://soundbible.com/mp3/Buzzer-SoundBible.com-188422102.mp3' },
      { shouldPlay: true }
    );
  };

  isButtonPressed(buttonColor) {
    var query = db.ref('teams/' + buttonColor + '/').update({
      isButtonPressed: true,


    });
  }

  render() {
    return (
      <TouchableOpacity
        style={[styles.button, { backgroundColor: this.props.color }]}
        onPress={() => {
          var buttonColor = this.props.color;
          this.isButtonPressed(buttonColor);
          this.playSound();
        }}>
        <Text style={styles.buttonText}>Press Me</Text>
      </TouchableOpacity>
    );
  }
}
const styles = StyleSheet.create({
  button: {
    marginTop: 100,
    marginLeft: 80,
    borderWidth: 1,
    borderColor: 'rgba(0,0,0,0.2)',
    alignItems: 'center',
    justifyContent: 'center',
    width: 200,
    height: 200,
    backgroundColor: 'red',
    borderRadius: 100,
  },
  buttonText: {
    fontWeight: 'bold',
    fontSize: 20,
  },
});

export default SoundButton;


__________________________________ Snak
import React, { Component } from 'react';
import { Text, View, StyleSheet, Button } from 'react-native';
import db from './config';

export default class App extends Component {
  constructor() {
    super();
    this.state = {
      teamsRank: [],
    };
  }

  showTeamRanks = () => {
    var teams = [];
    var teamRef = db.ref('teams/');
    teamRef.on('value', data => {
      var teamList = data.val();
      for (var team in teamList) {
        if (teamList[team]['isButtonPressed'] === true) {
          teamList[team]["teamName"] = team;
          teams.push(teamList[team]);
        }
      }
      teams.sort(function(team1, team2){
        return team1.timestamp - team2.timestamp;
      })
      this.setState({ teamsRank: teams });
 
    });
  }

  resetDb = () => {
    console.log("Hello");
    var restDatabase = db.ref('teams/').set({
      red: {
        isButtonPressed: false,
        timestamp: 0,
      },
      green: {
        isButtonPressed: false,
        timestamp: 0,
      },
      blue: {
        isButtonPressed: false,
        timestamp: 0,
      },
      yellow: {
        isButtonPressed: false,
        timestamp: 0,
      },
    });
     this.setState({ teamsRank: [] });
  }

 componentDidMount() {
    this.showTeamRanks();
  }



  render() {
    return (
      <View style={{flex:1}}>
       <View
       style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
          {this.state.teamsRank.map((team) => (
            <View 
              style={{
                width: 140,
                height: 55,
                borderWidth: 2,
                margin: 5,
                justifyContent: 'center',
                alignItems: 'center',
                backgroundColor: team.teamName,
              }}>
              <Text>{team.teamName.toUpperCase()}</Text>
            </View>
          ))}
        </View>
        <Button
          title="RESET"
          style={{ width: 100, height: 100 }}
          onPress={this.resetDb}
        />
      </View>
    );
  }
}
